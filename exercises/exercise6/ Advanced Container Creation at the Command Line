

NOTE: These exercises can be completed using Linux Academy Lab Servers running any distribution and version available AS LONG AS the Docker application has been installed and the Docker Daemon has been started. If you have not followed other Docker exercises, prepare your environment by pulling down the base images for 'centos:6' and 'ubuntu:latest'.

Prev:

  docker pull centos:6
  docker pull ubuntu:latest

1. Using the Docker base image for Ubuntu, create a container with the following characteristics:

  - Interactive

  - Attached to Terminal

  - Using Google Public DNS

  - Named 'mycontainer1'

  Solution: docker run -it --dns=8.8.8.8 --name=mucontainer1 ubuntu:latest /bin/bash

2. Exit the container from Step #1. Using the Docker base image for Ubuntu, create a container with the following characteristics:

  - Interactive

  - Attached to Terminal 

  - Using Google Public DNS

  - Using Domain Search "mydomain.local"

  - Named 'mycontainer2'

  Solution: docker run -it --name=mycontainer2 --dns=8.8.8.8 --dns-search=mydomain.local ubuntu:latest /bin/bash

3. Exit the container from Step #2. Using the Docker base image for Ubuntu, create a container with the following characteristics:

  - Interactive

  - Attached to Terminal 

  - Using Google Public DNS

  - Using Domain Search "mydomain.local"

  - Create a mount called '/local_vol'

  - Create a mount called '/remote_vol' that mounts the file system in /home/user

  - Named 'mycontainer3'

  Solution: docker run -it --dns=8.8.8.8 --dns-search=mydomain.local --name=mycontainer3 -v /local_vol -v /home/fjdiaz1/docker/mydata:/remote_vol ubuntu:latest /bin/bash

4. Exit the container from Step #3. List all the containers. List all characteristics inspected from 'mycontainer2' and then remove and verify removal of all containers.
  
  Solution:

    docker images
    docker ps -a
    docker inspect mycontainer2

    docker rm <name_container1> && docker rm <name_container2> && docker rm <name_container3